var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.812,1,0.812]],["body/components/AppComponent.html",[0,1.199,1,1.293,2,1.893,3,0.759,4,0.618,5,2.352,6,1.705,7,1.705,8,1.705,9,0.618,10,1.705,11,1.705,12,2.903,13,2.45,14,2.352,15,2.352,16,3.491,17,2.352,18,3.049,19,0.494,20,1.276,21,3.948,22,0.618,23,0.076,24,1.705,25,1.123,26,0.759,27,3.049,28,3.049,29,3.049,30,1.372,31,2.21,32,0.759,33,0.925,34,0.759,35,1.123,36,2.352,37,2.21,38,1.705,39,1.705,40,2.352,41,1.705,42,1.705,43,1.705,44,1.705,45,1.705,46,2.21,47,2.21,48,2.21,49,1.705,50,2.352,51,3.049,52,2.352,53,2.21,54,2.21,55,2.21,56,2.21,57,1.705,58,1.705,59,1.705,60,1.705,61,2.21,62,2.21,63,2.21,64,1.123,65,2.352,66,2.352,67,1.705,68,2.903,69,1.705,70,1.276,71,1.705,72,0.759,73,1.372,74,1.372,75,1.705,76,1.705,77,0.036,78,0.05,79,0.036]],["title/modules/AppModule.html",[80,1.466,81,1.2]],["body/modules/AppModule.html",[1,1.569,3,0.883,4,0.719,9,0.719,23,0.077,32,1.375,33,1.076,34,0.883,35,1.307,64,1.307,72,1.465,73,1.596,77,0.042,78,0.055,79,0.042,80,1.596,81,2.267,82,1.596,83,1.307,84,2.907,85,2.907,86,2.604,87,1.983,88,1.983,89,1.983,90,1.983,91,2.604,92,1.983,93,1.596,94,2.571,95,3.376,96,1.983,97,1.596,98,3.376,99,2.571,100,1.596,101,2.571,102,2.571]],["title/injectables/BoardService.html",[103,1.2,104,1.2]],["body/injectables/BoardService.html",[3,0.548,4,0.446,9,0.446,14,1.23,19,0.538,20,1.007,22,0.673,23,0.078,25,0.81,26,1.397,30,2.006,32,0.997,33,0.667,34,0.548,35,0.81,70,0.667,74,1.801,77,0.026,78,0.039,79,0.026,103,1.224,104,1.224,105,1.595,106,1.23,107,2.901,108,1.857,109,2.408,110,2.493,111,2.238,112,1.595,113,2.408,114,1.352,115,1.584,116,1.595,117,1.23,118,0.99,119,2.006,120,1.857,121,1.495,122,1.595,123,1.857,124,2.264,125,2.493,126,2.814,127,1.857,128,3.648,129,3.232,130,3.9,131,2.493,132,2.408,133,3.648,134,2.493,135,3.648,136,1.857,137,3.232,138,3.648,139,3.232,140,2.408,141,3.232,142,1.595,143,0.548,144,0.81,145,1.595,146,2.238,147,2.901,148,2.408,149,1.595,150,2.408,151,1.595,152,1.595,153,1.595,154,1.595,155,1.495,156,0.99]],["title/components/GameBoardComponent.html",[0,0.812,72,0.812]],["body/components/GameBoardComponent.html",[0,0.569,1,0.245,2,0.772,3,0.245,4,0.199,5,1.531,6,0.549,7,0.549,8,0.549,9,0.199,11,0.549,12,1.531,13,1.232,15,0.959,17,0.959,19,0.278,20,0.52,22,0.92,23,0.077,25,1.355,26,0.851,30,2.189,32,0.774,33,0.298,34,0.245,35,0.362,36,0.959,38,0.549,39,1.531,40,1.91,41,0.959,42,0.549,43,0.549,44,0.549,45,2.54,49,0.549,50,2.383,52,2.813,57,1.277,58,2.181,59,2.813,60,0.549,64,0.362,65,0.959,66,0.959,67,0.549,68,1.531,69,0.549,70,1.293,71,0.549,72,0.682,73,1.918,74,1.918,75,0.549,76,0.549,77,0.012,78,0.02,79,0.012,100,2.228,104,1.259,108,0.959,110,1.531,111,0.549,114,0.298,115,1.183,117,0.959,118,0.772,119,1.232,120,1.531,121,1.232,123,0.959,124,1.918,127,1.277,131,2.383,134,0.549,136,1.738,143,1.098,144,0.362,146,0.959,155,0.772,156,0.442,157,2.769,158,0.549,159,1.244,160,1.656,161,1.656,162,1.244,163,1.656,164,1.656,165,2.828,166,1.656,167,1.656,168,1.656,169,1.656,170,2.253,171,2.253,172,1.985,173,1.244,174,1.985,175,0.712,176,1.244,177,0.712,178,2.477,179,0.712,180,1.244,181,0.712,182,0.712,183,0.712,184,0.712,185,2.253,186,0.712,187,0.549,188,0.712,189,0.712,190,0.712,191,1.244,192,0.712,193,2.477,194,1.244,195,0.712,196,0.712,197,1.244,198,0.712,199,0.712,200,0.712,201,0.712,202,1.244,203,0.712,204,1.985,205,1.985,206,0.712,207,1.277,208,0.712,209,1.244,210,2.253,211,0.712,212,0.712,213,0.712,214,1.244,215,0.712,216,0.712,217,0.712,218,0.712,219,0.712,220,0.712,221,0.712,222,1.244,223,1.244,224,1.244,225,1.244,226,1.244,227,1.244,228,1.244,229,1.244,230,1.244,231,2.253,232,2.968,233,0.712,234,0.712,235,1.656,236,0.712,237,2.253,238,0.712,239,1.244,240,1.244,241,0.712,242,1.985,243,0.712,244,2.828,245,2.666,246,2.477,247,1.656,248,1.656,249,2.253,250,1.244,251,0.712,252,0.712,253,1.244,254,0.712,255,0.712,256,0.712,257,1.656,258,1.656,259,1.244,260,0.712,261,0.712,262,0.712,263,0.712,264,0.712,265,0.712,266,0.712,267,0.712,268,0.712,269,0.712,270,0.712,271,1.244,272,0.712,273,0.712,274,1.244,275,0.712,276,1.656,277,1.656,278,1.244,279,2.253,280,1.244,281,3.379,282,1.244,283,3.379,284,3.09,285,2.828,286,0.959,287,1.244,288,1.244,289,1.244,290,0.712,291,0.712,292,1.244,293,1.656,294,1.985,295,0.712,296,0.712,297,0.712,298,0.712,299,0.712,300,0.712,301,0.712,302,0.712,303,0.712,304,0.712,305,0.712,306,0.712,307,0.712,308,0.712,309,0.712,310,0.712,311,0.712,312,0.712,313,0.712,314,0.712,315,0.712,316,0.712,317,0.712,318,0.712,319,1.244]],["title/interfaces/Player.html",[143,0.812,320,0.988]],["body/interfaces/Player.html",[3,1.064,4,0.866,9,0.866,19,0.692,20,1.59,22,1.062,23,0.075,24,3.171,32,1.064,34,1.064,70,1.793,77,0.05,78,0.062,79,0.05,114,1.793,119,2.66,143,1.412,144,1.574,320,1.296,321,1.923,322,2.39]],["title/interfaces/Square.html",[115,0.988,320,0.988]],["body/interfaces/Square.html",[3,1.031,4,0.838,9,0.838,19,0.67,20,1.558,22,1.041,23,0.077,26,1.456,32,1.031,34,1.031,77,0.049,78,0.061,79,0.049,114,1.773,115,1.558,118,2.312,121,2.515,143,1.031,144,1.524,207,3.269,320,1.255,321,1.862,323,2.314]],["title/coverage.html",[324,2.461]],["body/coverage.html",[0,1.258,1,1.003,9,0.816,10,2.251,22,0.816,23,0.074,72,1.003,77,0.048,78,0.06,79,0.048,100,1.812,103,1.483,104,1.483,106,2.251,115,1.221,124,2.779,143,1.003,157,2.251,158,2.251,320,1.532,322,2.251,323,2.251,324,2.251,325,2.919,326,2.919,327,2.919,328,2.919,329,2.919,330,2.919,331,3.662,332,2.251,333,3.662,334,2.825,335,3.662,336,2.251,337,2.251,338,2.919,339,2.919]],["title/dependencies.html",[83,1.439,340,1.989]],["body/dependencies.html",[23,0.077,33,1.245,77,0.048,78,0.06,79,0.048,83,1.512,96,2.859,97,2.301,341,2.976,342,2.976,343,2.976,344,4.496,345,2.976,346,2.976,347,2.976,348,2.976,349,2.296,350,2.976,351,2.976,352,2.976,353,2.976,354,2.976,355,2.976,356,2.976,357,2.976,358,2.976,359,2.976,360,2.976,361,2.976,362,2.976]],["title/miscellaneous/enumerations.html",[363,1.011,364,2.184]],["body/miscellaneous/enumerations.html",[19,0.757,23,0.072,26,1.378,77,0.055,78,0.065,79,0.055,114,1.678,286,3.095,363,1.723,364,2.615,365,3.39,366,4.012,367,3.39,368,4.012]],["title/index.html",[19,0.444,369,1.989,370,1.989]],["body/index.html",[0,1.286,4,0.709,13,1.575,23,0.054,70,1.061,77,0.041,78,0.054,79,0.041,93,1.575,337,1.957,349,2.888,371,2.537,372,3.346,373,2.537,374,3.744,375,2.537,376,2.537,377,2.537,378,3.346,379,4.138,380,4.334,381,2.537,382,2.537,383,2.537,384,2.537,385,2.537,386,2.537,387,2.537,388,2.537,389,2.537,390,2.537,391,3.744,392,3.744,393,2.537,394,4.138,395,2.537,396,2.537,397,2.537,398,2.537,399,2.537,400,2.537,401,1.957,402,3.346,403,3.346,404,3.981,405,2.537,406,3.346,407,3.346,408,2.537,409,3.981,410,2.537,411,2.537,412,2.537,413,3.744,414,2.537,415,2.537,416,2.537,417,2.537]],["title/modules.html",[82,1.98]],["body/modules.html",[23,0.067,77,0.058,78,0.067,79,0.058,81,1.812,82,2.213,97,2.213,418,3.566,419,3.566,420,3.566]],["title/overview.html",[421,2.461]],["body/overview.html",[1,1.551,2,1.884,23,0.071,64,1.543,72,1.399,77,0.049,78,0.061,79,0.049,80,2.329,81,2.294,83,1.543,84,2.342,85,2.342,86,2.342,87,2.342,88,2.342,89,2.342,90,2.342,91,2.895,92,2.342,93,1.884,103,1.543,125,2.895,126,2.895,321,1.884,421,2.342]],["title/miscellaneous/variables.html",[363,1.011,422,2.184]],["body/miscellaneous/variables.html",[19,0.713,22,1.081,23,0.076,25,1.966,26,1.329,77,0.052,78,0.063,79,0.052,155,1.98,156,1.98,187,2.984,332,2.46,334,3.339,336,2.46,363,1.621,401,2.984,422,2.46,423,3.19,424,3.19]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":124,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"coverage.html":{}}}],["0.0.10",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":240,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["0px",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["1",{"_index":125,"title":{},"body":{"injectables/BoardService.html":{},"overview.html":{}}}],["1.9.0",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["10vw",{"_index":315,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["12vw",{"_index":234,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["131313",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["15em",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":301,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["1fr",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["1px",{"_index":244,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["2",{"_index":126,"title":{},"body":{"injectables/BoardService.html":{},"overview.html":{}}}],["2.5.4",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["24px",{"_index":305,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["25px",{"_index":261,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["2px",{"_index":259,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["3",{"_index":129,"title":{},"body":{"injectables/BoardService.html":{}}}],["3.7.2",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":247,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["3px",{"_index":238,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["4",{"_index":130,"title":{},"body":{"injectables/BoardService.html":{}}}],["40vh",{"_index":311,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["4px",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":131,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["50px",{"_index":231,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["50vw",{"_index":310,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["5px",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["6",{"_index":133,"title":{},"body":{"injectables/BoardService.html":{}}}],["6.3.3",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["62626d",{"_index":248,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["65px",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["6px",{"_index":294,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["7",{"_index":134,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["7.2.0",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["7.3.9",{"_index":376,"title":{},"body":{"index.html":{}}}],["8",{"_index":135,"title":{},"body":{"injectables/BoardService.html":{}}}],["8.0.3",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["810e05",{"_index":307,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["a7aaff",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["again",{"_index":230,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["align",{"_index":254,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["angular",{"_index":349,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["animate.css",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["animations",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{},"index.html":{}}}],["app.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":81,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arial",{"_index":300,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["artifacts",{"_index":395,"title":{},"body":{"index.html":{}}}],["auto",{"_index":236,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["automatically",{"_index":385,"title":{},"body":{"index.html":{}}}],["b",{"_index":193,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["background",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["black",{"_index":260,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["block",{"_index":297,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["blue",{"_index":262,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["board.component",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["board.component.html",{"_index":162,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.scss",{"_index":161,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts",{"_index":158,"title":{},"body":{"components/GameBoardComponent.html":{},"coverage.html":{}}}],["board.component.ts:14",{"_index":192,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:15",{"_index":195,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:16",{"_index":188,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:18",{"_index":183,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:19",{"_index":186,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:20",{"_index":190,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:21",{"_index":189,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:22",{"_index":184,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:23",{"_index":196,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:24",{"_index":176,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:28",{"_index":179,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:31",{"_index":177,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:35",{"_index":181,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board.component.ts:56",{"_index":182,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["board/game",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"components/GameBoardComponent.html":{},"coverage.html":{}}}],["board[index].winner",{"_index":154,"title":{},"body":{"injectables/BoardService.html":{}}}],["board[pattern[0]].value",{"_index":151,"title":{},"body":{"injectables/BoardService.html":{}}}],["board[pattern[1]].value",{"_index":152,"title":{},"body":{"injectables/BoardService.html":{}}}],["board[pattern[2]].value",{"_index":153,"title":{},"body":{"injectables/BoardService.html":{}}}],["boardlocked",{"_index":163,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["boardservice",{"_index":104,"title":{"injectables/BoardService.html":{}},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"coverage.html":{}}}],["bold",{"_index":303,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["boolean",{"_index":121,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Square.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":237,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["bottom",{"_index":136,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["box",{"_index":246,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["browse",{"_index":420,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":394,"title":{},"body":{"index.html":{}}}],["button",{"_index":275,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["button:hover",{"_index":316,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["c62d1f",{"_index":283,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["center",{"_index":253,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["change",{"_index":387,"title":{},"body":{"index.html":{}}}],["check",{"_index":416,"title":{},"body":{"index.html":{}}}],["checked",{"_index":264,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["class",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["cli",{"_index":374,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":389,"title":{},"body":{"index.html":{}}}],["col",{"_index":138,"title":{},"body":{"injectables/BoardService.html":{}}}],["color",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["column",{"_index":267,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["columns",{"_index":241,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{},"overview.html":{}}}],["const",{"_index":147,"title":{},"body":{"injectables/BoardService.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["constructor(boardservice",{"_index":175,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["constructor(private",{"_index":200,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["container",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["content",{"_index":252,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["core",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":324,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currentplayer",{"_index":164,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["currentplayer.name",{"_index":224,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["currentplayer.symbol",{"_index":222,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["cursor",{"_index":257,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["d02718",{"_index":295,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["darkblue",{"_index":263,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":306,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["dependencies",{"_index":83,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":382,"title":{},"body":{"index.html":{}}}],["development",{"_index":377,"title":{},"body":{"index.html":{}}}],["diagonal",{"_index":141,"title":{},"body":{"injectables/BoardService.html":{}}}],["direction",{"_index":266,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["directive",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["directives",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":393,"title":{},"body":{"index.html":{}}}],["directory",{"_index":398,"title":{},"body":{"index.html":{}}}],["display",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["dist",{"_index":397,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["draw",{"_index":165,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["dynamic",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":410,"title":{},"body":{"index.html":{}}}],["e7e5e4",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["end",{"_index":409,"title":{},"body":{"index.html":{}}}],["endcolorstr='#c62d1f",{"_index":291,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["endcolorstr='#f24537",{"_index":318,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["enumerations",{"_index":364,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":270,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["execute",{"_index":406,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["f24537",{"_index":281,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["f5978e",{"_index":277,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["false",{"_index":156,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":299,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["ffa1a1",{"_index":265,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["fff",{"_index":256,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["ffffff",{"_index":298,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{}}}],["files",{"_index":388,"title":{},"body":{"index.html":{}}}],["filter",{"_index":289,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["first",{"_index":137,"title":{},"body":{"injectables/BoardService.html":{}}}],["flag",{"_index":400,"title":{},"body":{"index.html":{}}}],["flex",{"_index":250,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["font",{"_index":242,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["found",{"_index":213,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["foundwinner",{"_index":150,"title":{},"body":{"injectables/BoardService.html":{}}}],["full",{"_index":214,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["further",{"_index":412,"title":{},"body":{"index.html":{}}}],["game",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameBoardComponent.html":{}}}],["gameboardcomponent",{"_index":72,"title":{"components/GameBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameover",{"_index":166,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["gap",{"_index":243,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["generate",{"_index":391,"title":{},"body":{"index.html":{}}}],["generated",{"_index":373,"title":{},"body":{"index.html":{}}}],["getting",{"_index":369,"title":{"index.html":{}},"body":{}}],["go",{"_index":415,"title":{},"body":{"index.html":{}}}],["gradient(linear",{"_index":278,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["gradient(to",{"_index":288,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["gradient(top",{"_index":285,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["gradienttype=0",{"_index":292,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["grid",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["h1",{"_index":272,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["h3",{"_index":273,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["header",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["height",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["help",{"_index":413,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["http://localhost:4200",{"_index":384,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":159,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{}}}],["imports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{}}}],["injectable",{"_index":103,"title":{"injectables/BoardService.html":{}},"body":{"injectables/BoardService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/BoardService.html":{}}}],["inline",{"_index":296,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["inset",{"_index":276,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["interface",{"_index":320,"title":{"interfaces/Player.html":{},"interfaces/Square.html":{}},"body":{"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{}}}],["interfaces",{"_index":321,"title":{},"body":{"interfaces/Player.html":{},"interfaces/Square.html":{},"overview.html":{}}}],["iswinner",{"_index":109,"title":{},"body":{"injectables/BoardService.html":{}}}],["iswinner(symbol",{"_index":113,"title":{},"body":{"injectables/BoardService.html":{}}}],["it's",{"_index":225,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["it\\'s",{"_index":319,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["items",{"_index":255,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["js",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":251,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["karma",{"_index":408,"title":{},"body":{"index.html":{}}}],["lastwinner",{"_index":167,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["left",{"_index":279,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["legend",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameBoardComponent.html":{},"overview.html":{}}}],["letter",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["linear",{"_index":284,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["locked",{"_index":268,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["main",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["margin",{"_index":235,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["matching",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["methods",{"_index":108,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["middle",{"_index":132,"title":{},"body":{"injectables/BoardService.html":{}}}],["minmax(77px",{"_index":314,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["minmax(80px",{"_index":233,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["miscellaneous",{"_index":363,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":80,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":82,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":414,"title":{},"body":{"index.html":{}}}],["moz",{"_index":249,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["ms",{"_index":287,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"index.html":{}}}],["navigate",{"_index":383,"title":{},"body":{"index.html":{}}}],["new",{"_index":337,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["newgame",{"_index":110,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["next",{"_index":215,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["ng",{"_index":380,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":172,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["none",{"_index":271,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["o",{"_index":286,"title":{},"body":{"components/GameBoardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["object",{"_index":187,"title":{},"body":{"components/GameBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":160,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["opacity",{"_index":269,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["optional",{"_index":118,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Square.html":{}}}],["out",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":274,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["overflow",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":421,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":340,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":304,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["pattern",{"_index":148,"title":{},"body":{"injectables/BoardService.html":{}}}],["play",{"_index":229,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["player",{"_index":143,"title":{"interfaces/Player.html":{}},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{}}}],["player_human_a",{"_index":168,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["player_human_b",{"_index":169,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["playersymbole",{"_index":114,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"miscellaneous/enumerations.html":{}}}],["playersymbole.o",{"_index":194,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["playersymbole.x",{"_index":191,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["pointer",{"_index":258,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["position",{"_index":308,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["prod",{"_index":399,"title":{},"body":{"index.html":{}}}],["production",{"_index":401,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr='#c62d1f",{"_index":317,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr='#f24537",{"_index":290,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["project",{"_index":372,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{}}}],["protractor",{"_index":411,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":145,"title":{},"body":{"injectables/BoardService.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["radius",{"_index":293,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["readme",{"_index":417,"title":{},"body":{"index.html":{}}}],["relative",{"_index":309,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["reload",{"_index":386,"title":{},"body":{"index.html":{}}}],["reset",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":146,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["returns",{"_index":120,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["round",{"_index":216,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["row",{"_index":128,"title":{},"body":{"injectables/BoardService.html":{}}}],["rows",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["run",{"_index":379,"title":{},"body":{"index.html":{}}}],["running",{"_index":402,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["s.value",{"_index":218,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["scaffolding",{"_index":390,"title":{},"body":{"index.html":{}}}],["scorea",{"_index":170,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["scoreb",{"_index":171,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["second",{"_index":139,"title":{},"body":{"injectables/BoardService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["serve",{"_index":381,"title":{},"body":{"index.html":{}}}],["server",{"_index":378,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["shared/board.service",{"_index":199,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["shared/player",{"_index":197,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["shared/square",{"_index":198,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["size",{"_index":232,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["solid",{"_index":239,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"index.html":{}}}],["spacing",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["square",{"_index":115,"title":{"interfaces/Square.html":{}},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Square.html":{},"coverage.html":{}}}],["square.value",{"_index":205,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["square_click",{"_index":173,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["square_click(square",{"_index":180,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../player",{"_index":365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/game",{"_index":157,"title":{},"body":{"components/GameBoardComponent.html":{},"coverage.html":{}}}],["src/app/shared/board.service.ts",{"_index":106,"title":{},"body":{"injectables/BoardService.html":{},"coverage.html":{}}}],["src/app/shared/board.service.ts:18",{"_index":112,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/shared/board.service.ts:21",{"_index":122,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/shared/board.service.ts:29",{"_index":116,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/shared/board.service.ts:9",{"_index":142,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/shared/player",{"_index":367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/player.ts",{"_index":322,"title":{},"body":{"interfaces/Player.html":{},"coverage.html":{}}}],["src/app/shared/square.ts",{"_index":323,"title":{},"body":{"interfaces/Square.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":370,"title":{"index.html":{}},"body":{}}],["statements",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["stop(0.05",{"_index":280,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["stop(1",{"_index":282,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["stored",{"_index":396,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Player.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["support",{"_index":418,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":419,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":119,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{}}}],["symbole.enum",{"_index":144,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{}}}],["symbole.enum.ts",{"_index":366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["tac",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["test",{"_index":405,"title":{},"body":{"index.html":{}}}],["tests",{"_index":404,"title":{},"body":{"index.html":{}}}],["text",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["third",{"_index":140,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.board",{"_index":202,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.board.some(s",{"_index":217,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.boardservice.iswinner(this.currentplayer.symbol",{"_index":208,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.boardservice.newgame",{"_index":203,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.currentplayer",{"_index":210,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.currentplayer.symbol",{"_index":206,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.draw",{"_index":220,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.gameover",{"_index":204,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.lastwinner",{"_index":209,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.newgame",{"_index":201,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.player_human_a",{"_index":185,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.player_human_b",{"_index":221,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.scorea",{"_index":211,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.scoreb",{"_index":212,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.toggleplayer",{"_index":219,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["this.winningindexes",{"_index":149,"title":{},"body":{"injectables/BoardService.html":{}}}],["tic",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tictactoegame",{"_index":371,"title":{},"body":{"index.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["titlecase",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["toe",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["toggleplayer",{"_index":174,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["top",{"_index":127,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["true",{"_index":155,"title":{},"body":{"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":226,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Player.html":{},"interfaces/Square.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":403,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":223,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["use",{"_index":392,"title":{},"body":{"index.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/BoardService.html":{},"components/GameBoardComponent.html":{},"interfaces/Square.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GameBoardComponent.html":{}}}],["variable",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":422,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":375,"title":{},"body":{"index.html":{}}}],["via",{"_index":407,"title":{},"body":{"index.html":{}}}],["void",{"_index":178,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["webkit",{"_index":245,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["weight",{"_index":302,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["white",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":313,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["win",{"_index":227,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["winner",{"_index":207,"title":{},"body":{"components/GameBoardComponent.html":{},"interfaces/Square.html":{}}}],["winningindexes",{"_index":107,"title":{},"body":{"injectables/BoardService.html":{}}}],["wins",{"_index":228,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["x",{"_index":368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["y",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["z",{"_index":312,"title":{},"body":{"components/GameBoardComponent.html":{}}}],["zone.js",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tic tac toe'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tic tac toe';\n}\n\n    \n\n    \n        \n  \n    {{ title |titlecase}}\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n    display: grid;\n    grid-template-rows: 65px 1fr;\n    height: 100%;\n    overflow-y: hidden;\n}\n\n.app-header {\n    color: #131313;\n    background: #e7e5e4;\n    letter-spacing: .15em;\n    text-shadow: 0px 5px 4px #a7aaff;\n    color: #131313;\n    background: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title |titlecase}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameBoardComponent', 'selector': 'app-game-board'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameBoardComponent\n\nGameBoardComponent\n\nAppModule -->\n\nGameBoardComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameBoardComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GameBoardComponent } from './game-board/game-board.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameBoardComponent\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardService.html":{"url":"injectables/BoardService.html","title":"injectable - BoardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BoardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/board.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                winningIndexes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isWinner\n                            \n                            \n                                newGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/board.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isWinner\n                        \n                        \n                    \n                \n            \n            \n                \nisWinner(symbol: PlayerSymbole, board: Square[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/board.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    symbol\n                                    \n                                                PlayerSymbole\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    board\n                                    \n                                                Square[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newGame\n                        \n                        \n                    \n                \n            \n            \n                \nnewGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/board.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Square[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winningIndexes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    [0, 1, 2],  // top row\n    [3, 4, 5],  // middle row\n    [6, 7, 8],  // bottom row\n    [0, 3, 6],  // first col\n    [1, 4, 7],  // second col\n    [2, 5, 8],  // third col\n    [0, 4, 8],  // first diagonal\n    [2, 4, 6]   // second diagonal\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/board.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Square } from './square';\nimport { PlayerSymbole } from './player-symbole.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n  winningIndexes: number[][] = [\n    [0, 1, 2],  // top row\n    [3, 4, 5],  // middle row\n    [6, 7, 8],  // bottom row\n    [0, 3, 6],  // first col\n    [1, 4, 7],  // second col\n    [2, 5, 8],  // third col\n    [0, 4, 8],  // first diagonal\n    [2, 4, 6]   // second diagonal\n  ];\n\n  constructor() { }\n  newGame(): Square[] {\n    return [\n      { value: '' }, { value: '' }, { value: '' },\n      { value: '' }, { value: '' }, { value: '' },\n      { value: '' }, { value: '' }, { value: '' }\n    ];\n  }\n\n  isWinner(symbol: PlayerSymbole, board: Square[]): boolean {\n    for (const pattern of this.winningIndexes) {\n      const foundWinner = board[pattern[0]].value === symbol\n        && board[pattern[1]].value === symbol\n        && board[pattern[2]].value === symbol;\n\n      if (foundWinner) {\n        for (const index of pattern) {\n          board[index].winner = true;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameBoardComponent.html":{"url":"components/GameBoardComponent.html","title":"component - GameBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-board/game-board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-board\n            \n\n            \n                styleUrls\n                ./game-board.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                board\n                            \n                            \n                                boardLocked\n                            \n                            \n                                currentPlayer\n                            \n                            \n                                DRAW\n                            \n                            \n                                gameOver\n                            \n                            \n                                lastWinner\n                            \n                            \n                                PLAYER_HUMAN_A\n                            \n                            \n                                PLAYER_HUMAN_B\n                            \n                            \n                                scoreA\n                            \n                            \n                                scoreB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newGame\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                square_click\n                            \n                            \n                                togglePlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(boardService: BoardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game-board/game-board.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardService\n                                                  \n                                                        \n                                                                        BoardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newGame\n                        \n                        \n                    \n                \n            \n            \n                \nnewGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-board/game-board.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-board/game-board.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            square_click\n                        \n                        \n                    \n                \n            \n            \n                \nsquare_click(square: Square)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-board/game-board.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    square\n                                    \n                                                Square\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePlayer\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePlayer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game-board/game-board.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            board\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Square[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boardLocked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPlayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Player\n\n                        \n                    \n                    \n                        \n                            Default value : this.PLAYER_HUMAN_A\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAW\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: 'Draw' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastWinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLAYER_HUMAN_A\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Player\n\n                        \n                    \n                    \n                        \n                            Default value : { name: 'Player A', symbol: PlayerSymbole.x }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLAYER_HUMAN_B\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Player\n\n                        \n                    \n                    \n                        \n                            Default value : { name: 'Player B', symbol: PlayerSymbole.o }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game-board/game-board.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PlayerSymbole } from '../shared/player-symbole.enum';\nimport { Player } from '../shared/player';\nimport { Square } from '../shared/square';\nimport { BoardService } from '../shared/board.service';\n\n@Component({\n  selector: 'app-game-board',\n  templateUrl: './game-board.component.html',\n  styleUrls: ['./game-board.component.scss']\n})\nexport class GameBoardComponent implements OnInit {\n\n  PLAYER_HUMAN_A: Player = { name: 'Player A', symbol: PlayerSymbole.x };\n  PLAYER_HUMAN_B: Player = { name: 'Player B', symbol: PlayerSymbole.o };\n  DRAW = { name: 'Draw' };\n\n  board: Square[];\n  currentPlayer: Player = this.PLAYER_HUMAN_A;\n  lastWinner: any;\n  gameOver: boolean;\n  boardLocked: boolean;\n  scoreA = 0;\n  scoreB = 0;\n\n  constructor(private boardService: BoardService) { }\n\n  ngOnInit() {\n    this.newGame();\n  }\n  newGame() {\n    this.board = this.boardService.newGame();\n    this.gameOver = false;\n  }\n  square_click(square: Square): void {\n    if (square.value === '' && !this.gameOver) {\n      square.value = this.currentPlayer.symbol;\n      // Winner\n      if (this.boardService.isWinner(this.currentPlayer.symbol, this.board)) {\n        this.gameOver = true;\n        this.lastWinner = this.currentPlayer;\n        this.currentPlayer === this.PLAYER_HUMAN_A ? this.scoreA++ : this.scoreB++ ;\n        return;\n      }\n      // no winner found board is not full => next round\n      if (this.board.some(s => s.value === '')) {\n        this.togglePlayer();\n        return;\n      }\n      // board is not full => draw\n      this.gameOver = true;\n      this.lastWinner = this.DRAW;\n    }\n  }\n\n  togglePlayer(): void {\n    if (this.currentPlayer === this.PLAYER_HUMAN_A) {\n      this.currentPlayer = this.PLAYER_HUMAN_B;\n    } else {\n      this.currentPlayer = this.PLAYER_HUMAN_A;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ currentPlayer.symbol | uppercase }}\n      \n      \n        {{ currentPlayer.name | titlecase }} it's your turn\n      \n      \n        A : {{ scoreA }}\n         B: {{ scoreB }}\n      \n    \n\n    \n      \n        A Win\n      \n      \n        B Wins\n      \n      \n        It's a draw\n      \n    \n  \n  \n    \n      \n        \n          {{ square.value }}\n        \n      \n    \n  \n  \n    \n      Play again\n    \n  \n\n\n    \n\n    \n                \n                    ./game-board.component.scss\n                \n                .board-container {\n    display: grid;\n    grid-template-rows: 65px 1fr 50px;\n    height: 100%;\n}\n\n$size : minmax(80px, 12vw);\n\n.board {\n    margin: 0 auto;\n    border: 3px solid #000;\n    display: grid;\n    grid-template-columns: $size $size $size;\n    grid-template-rows: $size $size $size;\n    font-size: 50px;\n    background-color: #000;\n    grid-gap: 1px;\n    -webkit-box-shadow: 0px 0px 50px 30px #62626d;\n    -moz-box-shadow: 0px 0px 50px 30px #62626d;\n    box-shadow: 0px 0px 50px 30px #62626d;\n\n    .square {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: #fff;\n        cursor: pointer;\n        text-shadow: 1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue;\n\n        &.checked {\n            cursor: default;\n        }\n\n        &.winner {\n            background-color: #ffa1a1;\n        }\n    }\n\n    &-header {\n        flex-direction: column;\n    }\n\n    .locked {\n        opacity: .7;\n        pointer-events: none;\n    }\n}\n\nh1 {\n    margin: 2px;\n}\n\nh3 {\n    margin-top: 0;\n}\n\n\n#game-over-button {\n    -moz-box-shadow: inset 0px 1px 0px 0px #f5978e;\n    -webkit-box-shadow: inset 0px 1px 0px 0px #f5978e;\n    box-shadow: inset 0px 1px 0px 0px #f5978e;\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f24537), color-stop(1, #c62d1f));\n    background: -moz-linear-gradient(top, #f24537 5%, #c62d1f 100%);\n    background: -webkit-linear-gradient(top, #f24537 5%, #c62d1f 100%);\n    background: -o-linear-gradient(top, #f24537 5%, #c62d1f 100%);\n    background: -ms-linear-gradient(top, #f24537 5%, #c62d1f 100%);\n    background: linear-gradient(to bottom, #f24537 5%, #c62d1f 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#f24537', endColorstr='#c62d1f', GradientType=0);\n    background-color: #f24537;\n    -moz-border-radius: 6px;\n    -webkit-border-radius: 6px;\n    border-radius: 6px;\n    border: 1px solid #d02718;\n    display: inline-block;\n    cursor: pointer;\n    color: #ffffff;\n    font-family: Arial;\n    font-size: 15px;\n    font-weight: bold;\n    padding: 6px 24px;\n    text-decoration: none;\n    text-shadow: 0px 1px 0px #810e05;\n    position: relative;\n    /* left: 50vw; */\n    bottom: 40vh;\n    z-index: 100;\n    width: minmax(77px, 10vw);\n}\n\n#game-over-button:hover {\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #c62d1f), color-stop(1, #f24537));\n    background: -moz-linear-gradient(top, #c62d1f 5%, #f24537 100%);\n    background: -webkit-linear-gradient(top, #c62d1f 5%, #f24537 100%);\n    background: -o-linear-gradient(top, #c62d1f 5%, #f24537 100%);\n    background: -ms-linear-gradient(top, #c62d1f 5%, #f24537 100%);\n    background: linear-gradient(to bottom, #c62d1f 5%, #f24537 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#c62d1f', endColorstr='#f24537', GradientType=0);\n    background-color: #c62d1f;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ currentPlayer.symbol | uppercase }}                    {{ currentPlayer.name | titlecase }} it\\'s your turn                    A : {{ scoreA }}         B: {{ scoreB }}                            A Win                    B Wins                    It\\'s a draw                                          {{ square.value }}                                Play again      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameBoardComponent', 'selector': 'app-game-board'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/player.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        symbol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:         PlayerSymbole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlayerSymbole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlayerSymbole } from './player-symbole.enum';\n\nexport interface Player {\n  name: string;\n  symbol: PlayerSymbole;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Square.html":{"url":"interfaces/Square.html","title":"interface - Square","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Square\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/square.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                            Optional\n                                        winner\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         PlayerSymbole | \"\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlayerSymbole | \"\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winner\n                                    \n                                \n                                \n                                    \n                                        winner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlayerSymbole } from './player-symbole.enum';\n\nexport interface Square {\n  value: PlayerSymbole | '';\n  winner?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game-board/game-board.component.ts\n            \n            component\n            GameBoardComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/board.service.ts\n            \n            injectable\n            BoardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/player.ts\n            \n            interface\n            Player\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/square.ts\n            \n            interface\n            Square\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.3\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            angular-animations : 0.0.10\n        \n            animate.css : ^3.7.2\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PlayerSymbole   (src/.../player-symbole.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/player-symbole.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlayerSymbole\n                    \n                \n                        \n                            \n                                 x\n                            \n                        \n                        \n                            \n                                Value : x\n                            \n                        \n                        \n                            \n                                 o\n                            \n                        \n                        \n                            \n                                Value : o\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTicTacToeGame\nThis project was generated with Angular CLI version 7.3.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameBoardComponent\n\nGameBoardComponent\n\nAppModule -->\n\nGameBoardComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
